- name: backend setup
  hosts: backend
  become: yes 
  vars:
    login_host: db.daws78s-nnr.online

  vars_prompt:
  - name: mysql_root_password  
    prompt: "Enter::::ExpenseApp@1"
    private: no
    

  tasks:
  # dnf module disable nodejs -y
  - name: disable node js 
    ansible.builtin.command: dnf module disable nodejs -y
  #   dnf module enable nodejs:20 -y
  - name: enable node js 
    ansible.builtin.command: dnf module enable nodejs:20 -y

  #dnf install nodejs -y
  - name: install node js  
    ansible.builtin.dnf:
      name: "{{item}}"
      state: installed 
    loop:
    - nodejs
    - mysql   

  #useradd expense
  # ansible add user
  - name:  useradd expense #useradd expense ansible add user
    ansible.builtin.user:
      name: expemse

  # mkdir /app
  # ansible.create directry
  - name: create app direcotry
    ansible.builtin.file:
      path: /app
      state: directory

  # Download the application code to created app directory.
  # curl -o /tmp/backend.zip https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
  # download file - ansible.builtin.get_url

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  # cd /app
  # unzip /tmp/backend.zip
  #ansible unzip module

  - name: unzip/archieve backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes   #already files present 

  #cd /app
  #npm install  
  #builtin command  
  #args command module to install in /app
  # node_modules should modules in /app after npm install

  - name: install npm dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  # vim /etc/systemd/system/backend.service
  # created a backend.service in same folder
  # Environment=DB_HOST="db.daws78s-nnr.online"
  # ansible copy 

  - name: copy backend service code
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
      remote_src: yes
      

  #dnf install mysql -y #
  #mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql
  # Intially need PyMySQL 
  - name: PyMySQL
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9   

  #  Backend to DB connection
  # mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql
  # mysql
  #ls backend.schema
  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{mysql_root_password}}"
      login_host: "{{login_host}}"
      target: /app/schema/backend.sql
      state: import
      name: all

  # systemctl daemon-reload
  # systemctl restart backend

  













  

     

